Assignment 4 readme File

------------------------------------------------------------------------
Student 1: What is your name?

Kyle Noah Hiers


------------------------------------------------------------------------
Student 2: What is your name?

Divija Durga

------------------------------------------------------------------------
Student 1: What authorized sources of information did you use to
complete the assignment? COPY THE LIST of authorized sources of
information given in the "Policies" web page (also available on armlab
in the file ~cos217/AuthorizedSourcesList ) to this section of the
readme file, and edit it as appropriate.



------------------------------------------------------------------------
Student 2: What authorized sources of information did you use to
complete the assignment? COPY THE LIST of authorized sources of
information given in the "Policies" web page (also available on armlab
in the file ~cos217/AuthorizedSourcesList ) to this section of the
readme file, and edit it as appropriate.



------------------------------------------------------------------------
Student 1: What unauthorized sources of information did you use to
complete the assignment? List any unauthorized sources of information
that you used to complete the assignment, and describe how you used
them. The course "Policies" web page defines unauthorized sources of
information, and any source that you have used but not listed in the
authorized sources should be included here. Please note that using an
unauthorized source may trigger a course penalty, and depending on the
nature of the interaction, may additionally require the interaction
being reported to the Committee on Discipline. Write "None" if you used
no unauthorized sources of information.



------------------------------------------------------------------------
Student 2: What unauthorized sources of information did you use to
complete the assignment? List any unauthorized sources of information
that you used to complete the assignment, and describe how you used
them. The course "Policies" web page defines unauthorized sources of
information, and any source that you have used but not listed in the
authorized sources should be included here. Please note that using an
unauthorized source may trigger a course penalty, and depending on the
nature of the interaction, may additionally require the interaction
being reported to the Committee on Discipline. Write "None" if you used
no unauthorized sources of information.



------------------------------------------------------------------------
Student 1: In fulfillment of the requirement from section 2.4.3 of the
Academic Regulations in Princeton's Rights, Rules, Responsibilities
guide, enter your name in the space below the following affirmation:

This paper represents my own work in accordance with University
regulations.

Kyle Noah Hiers


------------------------------------------------------------------------
Student 2: In fulfillment of the requirement from section 2.4.3 of the
Academic Regulations in Princeton's Rights, Rules, Responsibilities
guide, enter your name in the space below the following affirmation:

This paper represents my own work in accordance with University
regulations.

Divija Durga

------------------------------------------------------------------------
Student 1: What is your assessment of the assignment? Was it helpful?
Was it fun?



------------------------------------------------------------------------
Student 2: What is your assessment of the assignment? Was it helpful?
Was it fun?



------------------------------------------------------------------------
(optional) What information can you provide about your submission that
will help your grader to grade it in the most favorable light? In
particular, what bugs are in your submission?



------------------------------------------------------------------------
What warnings does splint generate for Part 2's checker, and what are
your disagreements with them? Copy the splint warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."



------------------------------------------------------------------------
What warnings does critTer generate on checkerDT.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."



------------------------------------------------------------------------
What warnings does splint generate on your Part 3 code, and what are
your disagreements with them? Copy the splint warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."



------------------------------------------------------------------------
What warnings does critTer generate on your Part 3 code, and what are
your disagreements with them? Copy the critTer warnings here, and
express your disagreement after each warning. If there are no
warnings, then write "None."



------------------------------------------------------------------------
For each of the five faulty BDT implementations required by Step
1.5, identify the function where there is a bug. You do not have to
identify the bug itself, only its location, but note that this must be
the location of the underlying error, which is not necessarily where
the error manifests itself or is "noticed" by the client.


      Executable         Function with the underlying error
===============================================================
         ./bdtBad1        BDT_insert()
---------------------------------------------------------------
         ./bdtBad2        BDT_rm()
---------------------------------------------------------------
         ./bdtBad3        BDT_insert()
---------------------------------------------------------------
         ./bdtBad4        BDT_toString() 
            /*possibly in BDT_strcatAccumulate()*/
---------------------------------------------------------------
         ./bdtBad5        BDT_findNode()
===============================================================

------------------------------------------------------------------------
What are your critiques of the given DT implementations, as
specified in Step 2.5?
The following is a list of critiques of the implementation split up 
into issues with the interface and issues with the implementation.

INTERFACE:
      - In nodeDT.h multiple functions 
        take parameters of type Path_T which
        Is an internal abstraction of a Path defined in Path.h. It is 
        not best practice to expose internal representations which are 
        used to implement the interface to the user when they are not
        explicitly defined by the interface itself (in this case
        being seperately defined in path.h) to improve this it would be 
        better to simply take in path as a string and abstract the 
        Path_T internal typing away from the user.

IMPLEMENTATION:
      - one issue in the implementation which makes it very difficult
      for someone attempting to rework the code is the way in which 
      the implementation implements lexographic ordering. This breaks a 
      few programming best practices which I will describe here. 
      First to describe the way it is implemented: the Node_new 
      function defines a variable called ulIndex which is meant
      to be assigned to the proper index in the parent nodes child
      array eg. the index with the proper lexographic ordering
      . The first issue is that it is EXTREMELY unclear where this 
      ulIndex is assigned and thus where lexographic ordering is taken 
      to account. After very close analysis we realize that ulIndex is 
      assigned when its address is passed 
      as a pointer to the Node_hasChild function. 
      This function ultimately does the logic for finding the proper 
      lexographicly ordered index and updates the value at the address.
      This nested and unclear implementation of lexographic ordering
      breaks two best practices 
      that come to mind. First, the nested nature 
      of the assigning of the ulIndex variable 
      makes it very hard to follow, 
      generally speaking, important variables especially ones that 
      perform key logic functions that are treated as invariants 
      such as this one should be initialized clearly in the function
      which they are called. Nesting this assignment in a function by 
      passing the value as an address, particularly a function with
      an unassuming name of "hasChild" which is actually only called
      in an if(statement) makes the 
      logic very unclear and hard to finding.
      Specifically, important logic and assignment should be clear
      and not deeply nested, and, functions that implement important 
      logic should include the logic they are
       implementing clearly in the name
      in this case "hasChild" is not sufficient.
       Now this functionality
      is expressed in the function comment
       which makes it slightly better
      but there is still no clear 
      indication to a developer where lexographic
      ordering - an important invariant - is being implemented.



------------------------------------------------------------------------